plugins {
	id 'org.springframework.boot' 			version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' 	version '1.0.9.RELEASE'
	id 'io.qameta.allure' 					version '2.8.1'
	id 'groovy'
}

group = 'net.miiingle'

def allureVersion = '2.13.1'
def allureGradleVersion = '2.8.1'

repositories {
	mavenCentral()
	maven { url 'https://plugins.gradle.org/m2/' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.data:spring-data-rest-hal-browser'
	implementation 'org.codehaus.groovy:groovy'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testCompile(
			'com.codeborne:selenide:5.12.2',
			'org.spockframework:spock-core:1.3-groovy-2.5',
			'org.spockframework:spock-spring:1.3-groovy-2.5',
			"io.qameta.allure:allure-gradle:$allureGradleVersion",
			"io.qameta.allure:allure-junit4:$allureVersion",
			"io.qameta.allure:allure-rest-assured:$allureVersion",
			"io.qameta.allure:allure-selenide:$allureVersion",
	)
}

test {
	maxParallelForks = 1
}

allure {
	version = allureVersion
	autoconfigure = true
	aspectjweaver = true
	allureJavaVersion = allureVersion

	useSpock {
		version = allureVersion
	}
}

bootJar {

	from ("${project.buildDir}/reports/allure-report") {
		into 'static/allure'
	}

	from ("${project.buildDir}/reports/tests/test") {
		into 'static/test'
	}
}